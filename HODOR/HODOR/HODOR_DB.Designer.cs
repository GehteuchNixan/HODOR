//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("HODOR_modell", "FK__Benutzer__RolleI__2B3F6F97", "Rolle", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HODOR.Rolle), "Benutzer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HODOR.Benutzer), true)]
[assembly: EdmRelationshipAttribute("HODOR_modell", "FK__Download___Benut__31EC6D26", "Benutzer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HODOR.Benutzer), "Download_History", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HODOR.Download_History), true)]
[assembly: EdmRelationshipAttribute("HODOR_modell", "FK__Build__Build_von__20C1E124", "Subrelease", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HODOR.Subrelease), "Build", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HODOR.Build), true)]
[assembly: EdmRelationshipAttribute("HODOR_modell", "FK__Build__ReleaseID__1FCDBCEB", "Release", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HODOR.Release), "Build", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(HODOR.Build), true)]
[assembly: EdmRelationshipAttribute("HODOR_modell", "FK__Download___Build__32E0915F", "Build", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HODOR.Build), "Download_History", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HODOR.Download_History), true)]
[assembly: EdmRelationshipAttribute("HODOR_modell", "FK__Lizenz_Ve__Lizen__3A81B327", "Lizenz", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HODOR.Lizenz), "Lizenz_Versionsorientiert", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(HODOR.Lizenz_Versionsorientiert), true)]
[assembly: EdmRelationshipAttribute("HODOR_modell", "FK__Lizenz_Ze__Lizen__37A5467C", "Lizenz", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HODOR.Lizenz), "Lizenz_Zeitlich", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(HODOR.Lizenz_Zeitlich), true)]
[assembly: EdmRelationshipAttribute("HODOR_modell", "FK__Release__Release__1920BF5C", "Programm", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HODOR.Programm), "Release", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HODOR.Release), true)]
[assembly: EdmRelationshipAttribute("HODOR_modell", "FK__Subreleas__Subre__1CF15040", "Programm", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HODOR.Programm), "Subrelease", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HODOR.Subrelease), true)]
[assembly: EdmRelationshipAttribute("HODOR_modell", "FK__Subreleas__Relea__1BFD2C07", "Release", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HODOR.Release), "Subrelease", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(HODOR.Subrelease), true)]
[assembly: EdmRelationshipAttribute("HODOR_modell", "Benutzer_Zu_Lizenz", "Benutzer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HODOR.Benutzer), "Lizenz", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HODOR.Lizenz))]
[assembly: EdmRelationshipAttribute("HODOR_modell", "Modul_Zu_Subrelease", "Programm", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HODOR.Programm), "Subrelease", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HODOR.Subrelease))]
[assembly: EdmRelationshipAttribute("HODOR_modell", "Rolle_Zu_Rechte", "Rechte", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HODOR.Rechte), "Rolle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HODOR.Rolle))]

#endregion

namespace HODOR
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class HODOR_entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new HODOR_entities object using the connection string found in the 'HODOR_entities' section of the application configuration file.
        /// </summary>
        public HODOR_entities() : base("name=HODOR_entities", "HODOR_entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HODOR_entities object.
        /// </summary>
        public HODOR_entities(string connectionString) : base(connectionString, "HODOR_entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HODOR_entities object.
        /// </summary>
        public HODOR_entities(EntityConnection connection) : base(connection, "HODOR_entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Benutzer> Benutzers
        {
            get
            {
                if ((_Benutzers == null))
                {
                    _Benutzers = base.CreateObjectSet<Benutzer>("Benutzers");
                }
                return _Benutzers;
            }
        }
        private ObjectSet<Benutzer> _Benutzers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Build> Builds
        {
            get
            {
                if ((_Builds == null))
                {
                    _Builds = base.CreateObjectSet<Build>("Builds");
                }
                return _Builds;
            }
        }
        private ObjectSet<Build> _Builds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Download_History> Download_History
        {
            get
            {
                if ((_Download_History == null))
                {
                    _Download_History = base.CreateObjectSet<Download_History>("Download_History");
                }
                return _Download_History;
            }
        }
        private ObjectSet<Download_History> _Download_History;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lizenz> Lizenzs
        {
            get
            {
                if ((_Lizenzs == null))
                {
                    _Lizenzs = base.CreateObjectSet<Lizenz>("Lizenzs");
                }
                return _Lizenzs;
            }
        }
        private ObjectSet<Lizenz> _Lizenzs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lizenz_Versionsorientiert> Lizenz_Versionsorientiert
        {
            get
            {
                if ((_Lizenz_Versionsorientiert == null))
                {
                    _Lizenz_Versionsorientiert = base.CreateObjectSet<Lizenz_Versionsorientiert>("Lizenz_Versionsorientiert");
                }
                return _Lizenz_Versionsorientiert;
            }
        }
        private ObjectSet<Lizenz_Versionsorientiert> _Lizenz_Versionsorientiert;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lizenz_Zeitlich> Lizenz_Zeitlich
        {
            get
            {
                if ((_Lizenz_Zeitlich == null))
                {
                    _Lizenz_Zeitlich = base.CreateObjectSet<Lizenz_Zeitlich>("Lizenz_Zeitlich");
                }
                return _Lizenz_Zeitlich;
            }
        }
        private ObjectSet<Lizenz_Zeitlich> _Lizenz_Zeitlich;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Programm> Programms
        {
            get
            {
                if ((_Programms == null))
                {
                    _Programms = base.CreateObjectSet<Programm>("Programms");
                }
                return _Programms;
            }
        }
        private ObjectSet<Programm> _Programms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rechte> Rechtes
        {
            get
            {
                if ((_Rechtes == null))
                {
                    _Rechtes = base.CreateObjectSet<Rechte>("Rechtes");
                }
                return _Rechtes;
            }
        }
        private ObjectSet<Rechte> _Rechtes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Release> Releases
        {
            get
            {
                if ((_Releases == null))
                {
                    _Releases = base.CreateObjectSet<Release>("Releases");
                }
                return _Releases;
            }
        }
        private ObjectSet<Release> _Releases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rolle> Rolles
        {
            get
            {
                if ((_Rolles == null))
                {
                    _Rolles = base.CreateObjectSet<Rolle>("Rolles");
                }
                return _Rolles;
            }
        }
        private ObjectSet<Rolle> _Rolles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subrelease> Subreleases
        {
            get
            {
                if ((_Subreleases == null))
                {
                    _Subreleases = base.CreateObjectSet<Subrelease>("Subreleases");
                }
                return _Subreleases;
            }
        }
        private ObjectSet<Subrelease> _Subreleases;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Benutzers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBenutzers(Benutzer benutzer)
        {
            base.AddObject("Benutzers", benutzer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Builds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBuilds(Build build)
        {
            base.AddObject("Builds", build);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Download_History EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDownload_History(Download_History download_History)
        {
            base.AddObject("Download_History", download_History);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lizenzs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLizenzs(Lizenz lizenz)
        {
            base.AddObject("Lizenzs", lizenz);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lizenz_Versionsorientiert EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLizenz_Versionsorientiert(Lizenz_Versionsorientiert lizenz_Versionsorientiert)
        {
            base.AddObject("Lizenz_Versionsorientiert", lizenz_Versionsorientiert);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lizenz_Zeitlich EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLizenz_Zeitlich(Lizenz_Zeitlich lizenz_Zeitlich)
        {
            base.AddObject("Lizenz_Zeitlich", lizenz_Zeitlich);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Programms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProgramms(Programm programm)
        {
            base.AddObject("Programms", programm);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rechtes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRechtes(Rechte rechte)
        {
            base.AddObject("Rechtes", rechte);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Releases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReleases(Release release)
        {
            base.AddObject("Releases", release);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rolles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRolles(Rolle rolle)
        {
            base.AddObject("Rolles", rolle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subreleases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubreleases(Subrelease subrelease)
        {
            base.AddObject("Subreleases", subrelease);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HODOR_modell", Name="Benutzer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Benutzer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Benutzer object.
        /// </summary>
        /// <param name="benutzerID">Initial value of the BenutzerID property.</param>
        /// <param name="nutzer_Nr">Initial value of the Nutzer_Nr property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="rolleID">Initial value of the RolleID property.</param>
        public static Benutzer CreateBenutzer(global::System.Int32 benutzerID, global::System.String nutzer_Nr, global::System.String name, global::System.Int32 rolleID)
        {
            Benutzer benutzer = new Benutzer();
            benutzer.BenutzerID = benutzerID;
            benutzer.Nutzer_Nr = nutzer_Nr;
            benutzer.Name = name;
            benutzer.RolleID = rolleID;
            return benutzer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BenutzerID
        {
            get
            {
                return _BenutzerID;
            }
            set
            {
                if (_BenutzerID != value)
                {
                    OnBenutzerIDChanging(value);
                    ReportPropertyChanging("BenutzerID");
                    _BenutzerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BenutzerID");
                    OnBenutzerIDChanged();
                }
            }
        }
        private global::System.Int32 _BenutzerID;
        partial void OnBenutzerIDChanging(global::System.Int32 value);
        partial void OnBenutzerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nutzer_Nr
        {
            get
            {
                return _Nutzer_Nr;
            }
            set
            {
                OnNutzer_NrChanging(value);
                ReportPropertyChanging("Nutzer_Nr");
                _Nutzer_Nr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nutzer_Nr");
                OnNutzer_NrChanged();
            }
        }
        private global::System.String _Nutzer_Nr;
        partial void OnNutzer_NrChanging(global::System.String value);
        partial void OnNutzer_NrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswortHash
        {
            get
            {
                return _PasswortHash;
            }
            set
            {
                OnPasswortHashChanging(value);
                ReportPropertyChanging("PasswortHash");
                _PasswortHash = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswortHash");
                OnPasswortHashChanged();
            }
        }
        private global::System.String _PasswortHash;
        partial void OnPasswortHashChanging(global::System.String value);
        partial void OnPasswortHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RolleID
        {
            get
            {
                return _RolleID;
            }
            set
            {
                OnRolleIDChanging(value);
                ReportPropertyChanging("RolleID");
                _RolleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RolleID");
                OnRolleIDChanged();
            }
        }
        private global::System.Int32 _RolleID;
        partial void OnRolleIDChanging(global::System.Int32 value);
        partial void OnRolleIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "FK__Benutzer__RolleI__2B3F6F97", "Rolle")]
        public Rolle Rolle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rolle>("HODOR_modell.FK__Benutzer__RolleI__2B3F6F97", "Rolle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rolle>("HODOR_modell.FK__Benutzer__RolleI__2B3F6F97", "Rolle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Rolle> RolleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rolle>("HODOR_modell.FK__Benutzer__RolleI__2B3F6F97", "Rolle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Rolle>("HODOR_modell.FK__Benutzer__RolleI__2B3F6F97", "Rolle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "FK__Download___Benut__31EC6D26", "Download_History")]
        public EntityCollection<Download_History> Download_History
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Download_History>("HODOR_modell.FK__Download___Benut__31EC6D26", "Download_History");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Download_History>("HODOR_modell.FK__Download___Benut__31EC6D26", "Download_History", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "Benutzer_Zu_Lizenz", "Lizenz")]
        public EntityCollection<Lizenz> Lizenzs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lizenz>("HODOR_modell.Benutzer_Zu_Lizenz", "Lizenz");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lizenz>("HODOR_modell.Benutzer_Zu_Lizenz", "Lizenz", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HODOR_modell", Name="Build")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Build : Release
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Build object.
        /// </summary>
        /// <param name="releaseID">Initial value of the ReleaseID property.</param>
        /// <param name="build_von_Subrelease">Initial value of the Build_von_Subrelease property.</param>
        public static Build CreateBuild(global::System.Int32 releaseID, global::System.Int32 build_von_Subrelease)
        {
            Build build = new Build();
            build.ReleaseID = releaseID;
            build.Build_von_Subrelease = build_von_Subrelease;
            return build;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReleaseID
        {
            get
            {
                return _ReleaseID;
            }
            set
            {
                if (_ReleaseID != value)
                {
                    OnReleaseIDChanging(value);
                    ReportPropertyChanging("ReleaseID");
                    _ReleaseID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReleaseID");
                    OnReleaseIDChanged();
                }
            }
        }
        private global::System.Int32 _ReleaseID;
        partial void OnReleaseIDChanging(global::System.Int32 value);
        partial void OnReleaseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Build_von_Subrelease
        {
            get
            {
                return _Build_von_Subrelease;
            }
            set
            {
                OnBuild_von_SubreleaseChanging(value);
                ReportPropertyChanging("Build_von_Subrelease");
                _Build_von_Subrelease = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Build_von_Subrelease");
                OnBuild_von_SubreleaseChanged();
            }
        }
        private global::System.Int32 _Build_von_Subrelease;
        partial void OnBuild_von_SubreleaseChanging(global::System.Int32 value);
        partial void OnBuild_von_SubreleaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Datendateipfad
        {
            get
            {
                return _Datendateipfad;
            }
            set
            {
                OnDatendateipfadChanging(value);
                ReportPropertyChanging("Datendateipfad");
                _Datendateipfad = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Datendateipfad");
                OnDatendateipfadChanged();
            }
        }
        private global::System.String _Datendateipfad;
        partial void OnDatendateipfadChanging(global::System.String value);
        partial void OnDatendateipfadChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "FK__Build__Build_von__20C1E124", "Subrelease")]
        public Subrelease Subrelease
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subrelease>("HODOR_modell.FK__Build__Build_von__20C1E124", "Subrelease").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subrelease>("HODOR_modell.FK__Build__Build_von__20C1E124", "Subrelease").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subrelease> SubreleaseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subrelease>("HODOR_modell.FK__Build__Build_von__20C1E124", "Subrelease");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subrelease>("HODOR_modell.FK__Build__Build_von__20C1E124", "Subrelease", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "FK__Build__ReleaseID__1FCDBCEB", "Release")]
        public Release Release
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Release>("HODOR_modell.FK__Build__ReleaseID__1FCDBCEB", "Release").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Release>("HODOR_modell.FK__Build__ReleaseID__1FCDBCEB", "Release").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Release> ReleaseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Release>("HODOR_modell.FK__Build__ReleaseID__1FCDBCEB", "Release");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Release>("HODOR_modell.FK__Build__ReleaseID__1FCDBCEB", "Release", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "FK__Download___Build__32E0915F", "Download_History")]
        public EntityCollection<Download_History> Download_History
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Download_History>("HODOR_modell.FK__Download___Build__32E0915F", "Download_History");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Download_History>("HODOR_modell.FK__Download___Build__32E0915F", "Download_History", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HODOR_modell", Name="Download_History")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Download_History : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Download_History object.
        /// </summary>
        /// <param name="download_HistoryID">Initial value of the Download_HistoryID property.</param>
        /// <param name="benutzerID">Initial value of the BenutzerID property.</param>
        /// <param name="buildID">Initial value of the BuildID property.</param>
        /// <param name="downloadDatum">Initial value of the DownloadDatum property.</param>
        public static Download_History CreateDownload_History(global::System.Int32 download_HistoryID, global::System.Int32 benutzerID, global::System.Int32 buildID, global::System.DateTime downloadDatum)
        {
            Download_History download_History = new Download_History();
            download_History.Download_HistoryID = download_HistoryID;
            download_History.BenutzerID = benutzerID;
            download_History.BuildID = buildID;
            download_History.DownloadDatum = downloadDatum;
            return download_History;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Download_HistoryID
        {
            get
            {
                return _Download_HistoryID;
            }
            set
            {
                if (_Download_HistoryID != value)
                {
                    OnDownload_HistoryIDChanging(value);
                    ReportPropertyChanging("Download_HistoryID");
                    _Download_HistoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Download_HistoryID");
                    OnDownload_HistoryIDChanged();
                }
            }
        }
        private global::System.Int32 _Download_HistoryID;
        partial void OnDownload_HistoryIDChanging(global::System.Int32 value);
        partial void OnDownload_HistoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BenutzerID
        {
            get
            {
                return _BenutzerID;
            }
            set
            {
                OnBenutzerIDChanging(value);
                ReportPropertyChanging("BenutzerID");
                _BenutzerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BenutzerID");
                OnBenutzerIDChanged();
            }
        }
        private global::System.Int32 _BenutzerID;
        partial void OnBenutzerIDChanging(global::System.Int32 value);
        partial void OnBenutzerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BuildID
        {
            get
            {
                return _BuildID;
            }
            set
            {
                OnBuildIDChanging(value);
                ReportPropertyChanging("BuildID");
                _BuildID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BuildID");
                OnBuildIDChanged();
            }
        }
        private global::System.Int32 _BuildID;
        partial void OnBuildIDChanging(global::System.Int32 value);
        partial void OnBuildIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DownloadDatum
        {
            get
            {
                return _DownloadDatum;
            }
            set
            {
                OnDownloadDatumChanging(value);
                ReportPropertyChanging("DownloadDatum");
                _DownloadDatum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DownloadDatum");
                OnDownloadDatumChanged();
            }
        }
        private global::System.DateTime _DownloadDatum;
        partial void OnDownloadDatumChanging(global::System.DateTime value);
        partial void OnDownloadDatumChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "FK__Download___Benut__31EC6D26", "Benutzer")]
        public Benutzer Benutzer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Benutzer>("HODOR_modell.FK__Download___Benut__31EC6D26", "Benutzer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Benutzer>("HODOR_modell.FK__Download___Benut__31EC6D26", "Benutzer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Benutzer> BenutzerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Benutzer>("HODOR_modell.FK__Download___Benut__31EC6D26", "Benutzer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Benutzer>("HODOR_modell.FK__Download___Benut__31EC6D26", "Benutzer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "FK__Download___Build__32E0915F", "Build")]
        public Build Build
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Build>("HODOR_modell.FK__Download___Build__32E0915F", "Build").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Build>("HODOR_modell.FK__Download___Build__32E0915F", "Build").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Build> BuildReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Build>("HODOR_modell.FK__Download___Build__32E0915F", "Build");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Build>("HODOR_modell.FK__Download___Build__32E0915F", "Build", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HODOR_modell", Name="Lizenz")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lizenz : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lizenz object.
        /// </summary>
        /// <param name="lizenzID">Initial value of the LizenzID property.</param>
        public static Lizenz CreateLizenz(global::System.Int32 lizenzID)
        {
            Lizenz lizenz = new Lizenz();
            lizenz.LizenzID = lizenzID;
            return lizenz;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LizenzID
        {
            get
            {
                return _LizenzID;
            }
            set
            {
                if (_LizenzID != value)
                {
                    OnLizenzIDChanging(value);
                    ReportPropertyChanging("LizenzID");
                    _LizenzID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LizenzID");
                    OnLizenzIDChanged();
                }
            }
        }
        private global::System.Int32 _LizenzID;
        partial void OnLizenzIDChanging(global::System.Int32 value);
        partial void OnLizenzIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "FK__Lizenz_Ve__Lizen__3A81B327", "Lizenz_Versionsorientiert")]
        public Lizenz_Versionsorientiert Lizenz_Versionsorientiert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lizenz_Versionsorientiert>("HODOR_modell.FK__Lizenz_Ve__Lizen__3A81B327", "Lizenz_Versionsorientiert").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lizenz_Versionsorientiert>("HODOR_modell.FK__Lizenz_Ve__Lizen__3A81B327", "Lizenz_Versionsorientiert").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lizenz_Versionsorientiert> Lizenz_VersionsorientiertReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lizenz_Versionsorientiert>("HODOR_modell.FK__Lizenz_Ve__Lizen__3A81B327", "Lizenz_Versionsorientiert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lizenz_Versionsorientiert>("HODOR_modell.FK__Lizenz_Ve__Lizen__3A81B327", "Lizenz_Versionsorientiert", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "FK__Lizenz_Ze__Lizen__37A5467C", "Lizenz_Zeitlich")]
        public Lizenz_Zeitlich Lizenz_Zeitlich
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lizenz_Zeitlich>("HODOR_modell.FK__Lizenz_Ze__Lizen__37A5467C", "Lizenz_Zeitlich").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lizenz_Zeitlich>("HODOR_modell.FK__Lizenz_Ze__Lizen__37A5467C", "Lizenz_Zeitlich").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lizenz_Zeitlich> Lizenz_ZeitlichReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lizenz_Zeitlich>("HODOR_modell.FK__Lizenz_Ze__Lizen__37A5467C", "Lizenz_Zeitlich");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lizenz_Zeitlich>("HODOR_modell.FK__Lizenz_Ze__Lizen__37A5467C", "Lizenz_Zeitlich", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "Benutzer_Zu_Lizenz", "Benutzer")]
        public EntityCollection<Benutzer> Benutzers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Benutzer>("HODOR_modell.Benutzer_Zu_Lizenz", "Benutzer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Benutzer>("HODOR_modell.Benutzer_Zu_Lizenz", "Benutzer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HODOR_modell", Name="Lizenz_Versionsorientiert")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lizenz_Versionsorientiert : Lizenz
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lizenz_Versionsorientiert object.
        /// </summary>
        /// <param name="lizenzID">Initial value of the LizenzID property.</param>
        /// <param name="versionserhöhung">Initial value of the Versionserhöhung property.</param>
        public static Lizenz_Versionsorientiert CreateLizenz_Versionsorientiert(global::System.Int32 lizenzID, global::System.Int32 versionserhöhung)
        {
            Lizenz_Versionsorientiert lizenz_Versionsorientiert = new Lizenz_Versionsorientiert();
            lizenz_Versionsorientiert.LizenzID = lizenzID;
            lizenz_Versionsorientiert.Versionserhöhung = versionserhöhung;
            return lizenz_Versionsorientiert;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LizenzID
        {
            get
            {
                return _LizenzID;
            }
            set
            {
                if (_LizenzID != value)
                {
                    OnLizenzIDChanging(value);
                    ReportPropertyChanging("LizenzID");
                    _LizenzID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LizenzID");
                    OnLizenzIDChanged();
                }
            }
        }
        private global::System.Int32 _LizenzID;
        partial void OnLizenzIDChanging(global::System.Int32 value);
        partial void OnLizenzIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Versionserhöhung
        {
            get
            {
                return _Versionserhöhung;
            }
            set
            {
                OnVersionserhöhungChanging(value);
                ReportPropertyChanging("Versionserhöhung");
                _Versionserhöhung = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Versionserhöhung");
                OnVersionserhöhungChanged();
            }
        }
        private global::System.Int32 _Versionserhöhung;
        partial void OnVersionserhöhungChanging(global::System.Int32 value);
        partial void OnVersionserhöhungChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "FK__Lizenz_Ve__Lizen__3A81B327", "Lizenz")]
        public Lizenz Lizenz
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lizenz>("HODOR_modell.FK__Lizenz_Ve__Lizen__3A81B327", "Lizenz").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lizenz>("HODOR_modell.FK__Lizenz_Ve__Lizen__3A81B327", "Lizenz").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lizenz> LizenzReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lizenz>("HODOR_modell.FK__Lizenz_Ve__Lizen__3A81B327", "Lizenz");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lizenz>("HODOR_modell.FK__Lizenz_Ve__Lizen__3A81B327", "Lizenz", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HODOR_modell", Name="Lizenz_Zeitlich")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lizenz_Zeitlich : Lizenz
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lizenz_Zeitlich object.
        /// </summary>
        /// <param name="lizenzID">Initial value of the LizenzID property.</param>
        /// <param name="startDatum">Initial value of the StartDatum property.</param>
        /// <param name="endDatum">Initial value of the EndDatum property.</param>
        public static Lizenz_Zeitlich CreateLizenz_Zeitlich(global::System.Int32 lizenzID, global::System.DateTime startDatum, global::System.DateTime endDatum)
        {
            Lizenz_Zeitlich lizenz_Zeitlich = new Lizenz_Zeitlich();
            lizenz_Zeitlich.LizenzID = lizenzID;
            lizenz_Zeitlich.StartDatum = startDatum;
            lizenz_Zeitlich.EndDatum = endDatum;
            return lizenz_Zeitlich;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LizenzID
        {
            get
            {
                return _LizenzID;
            }
            set
            {
                if (_LizenzID != value)
                {
                    OnLizenzIDChanging(value);
                    ReportPropertyChanging("LizenzID");
                    _LizenzID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LizenzID");
                    OnLizenzIDChanged();
                }
            }
        }
        private global::System.Int32 _LizenzID;
        partial void OnLizenzIDChanging(global::System.Int32 value);
        partial void OnLizenzIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDatum
        {
            get
            {
                return _StartDatum;
            }
            set
            {
                OnStartDatumChanging(value);
                ReportPropertyChanging("StartDatum");
                _StartDatum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDatum");
                OnStartDatumChanged();
            }
        }
        private global::System.DateTime _StartDatum;
        partial void OnStartDatumChanging(global::System.DateTime value);
        partial void OnStartDatumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDatum
        {
            get
            {
                return _EndDatum;
            }
            set
            {
                OnEndDatumChanging(value);
                ReportPropertyChanging("EndDatum");
                _EndDatum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDatum");
                OnEndDatumChanged();
            }
        }
        private global::System.DateTime _EndDatum;
        partial void OnEndDatumChanging(global::System.DateTime value);
        partial void OnEndDatumChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "FK__Lizenz_Ze__Lizen__37A5467C", "Lizenz")]
        public Lizenz Lizenz
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lizenz>("HODOR_modell.FK__Lizenz_Ze__Lizen__37A5467C", "Lizenz").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lizenz>("HODOR_modell.FK__Lizenz_Ze__Lizen__37A5467C", "Lizenz").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lizenz> LizenzReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lizenz>("HODOR_modell.FK__Lizenz_Ze__Lizen__37A5467C", "Lizenz");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lizenz>("HODOR_modell.FK__Lizenz_Ze__Lizen__37A5467C", "Lizenz", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HODOR_modell", Name="Programm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Programm : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Programm object.
        /// </summary>
        /// <param name="programmID">Initial value of the ProgrammID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Programm CreateProgramm(global::System.Int32 programmID, global::System.String name)
        {
            Programm programm = new Programm();
            programm.ProgrammID = programmID;
            programm.Name = name;
            return programm;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProgrammID
        {
            get
            {
                return _ProgrammID;
            }
            set
            {
                if (_ProgrammID != value)
                {
                    OnProgrammIDChanging(value);
                    ReportPropertyChanging("ProgrammID");
                    _ProgrammID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProgrammID");
                    OnProgrammIDChanged();
                }
            }
        }
        private global::System.Int32 _ProgrammID;
        partial void OnProgrammIDChanging(global::System.Int32 value);
        partial void OnProgrammIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "FK__Release__Release__1920BF5C", "Release")]
        public EntityCollection<Release> Releases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Release>("HODOR_modell.FK__Release__Release__1920BF5C", "Release");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Release>("HODOR_modell.FK__Release__Release__1920BF5C", "Release", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "FK__Subreleas__Subre__1CF15040", "Subrelease")]
        public EntityCollection<Subrelease> Subreleases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subrelease>("HODOR_modell.FK__Subreleas__Subre__1CF15040", "Subrelease");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subrelease>("HODOR_modell.FK__Subreleas__Subre__1CF15040", "Subrelease", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "Modul_Zu_Subrelease", "Subrelease")]
        public EntityCollection<Subrelease> Subreleases1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subrelease>("HODOR_modell.Modul_Zu_Subrelease", "Subrelease");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subrelease>("HODOR_modell.Modul_Zu_Subrelease", "Subrelease", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HODOR_modell", Name="Rechte")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rechte : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rechte object.
        /// </summary>
        /// <param name="rechteID">Initial value of the RechteID property.</param>
        public static Rechte CreateRechte(global::System.Int32 rechteID)
        {
            Rechte rechte = new Rechte();
            rechte.RechteID = rechteID;
            return rechte;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RechteID
        {
            get
            {
                return _RechteID;
            }
            set
            {
                if (_RechteID != value)
                {
                    OnRechteIDChanging(value);
                    ReportPropertyChanging("RechteID");
                    _RechteID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RechteID");
                    OnRechteIDChanged();
                }
            }
        }
        private global::System.Int32 _RechteID;
        partial void OnRechteIDChanging(global::System.Int32 value);
        partial void OnRechteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Beschreibung
        {
            get
            {
                return _Beschreibung;
            }
            set
            {
                OnBeschreibungChanging(value);
                ReportPropertyChanging("Beschreibung");
                _Beschreibung = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Beschreibung");
                OnBeschreibungChanged();
            }
        }
        private global::System.String _Beschreibung;
        partial void OnBeschreibungChanging(global::System.String value);
        partial void OnBeschreibungChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "Rolle_Zu_Rechte", "Rolle")]
        public EntityCollection<Rolle> Rolles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rolle>("HODOR_modell.Rolle_Zu_Rechte", "Rolle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rolle>("HODOR_modell.Rolle_Zu_Rechte", "Rolle", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HODOR_modell", Name="Release")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Release : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Release object.
        /// </summary>
        /// <param name="releaseID">Initial value of the ReleaseID property.</param>
        /// <param name="release_Von_Programm">Initial value of the Release_Von_Programm property.</param>
        /// <param name="releasedatum">Initial value of the Releasedatum property.</param>
        /// <param name="releasenummer">Initial value of the Releasenummer property.</param>
        public static Release CreateRelease(global::System.Int32 releaseID, global::System.Int32 release_Von_Programm, global::System.DateTime releasedatum, global::System.Int32 releasenummer)
        {
            Release release = new Release();
            release.ReleaseID = releaseID;
            release.Release_Von_Programm = release_Von_Programm;
            release.Releasedatum = releasedatum;
            release.Releasenummer = releasenummer;
            return release;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReleaseID
        {
            get
            {
                return _ReleaseID;
            }
            set
            {
                if (_ReleaseID != value)
                {
                    OnReleaseIDChanging(value);
                    ReportPropertyChanging("ReleaseID");
                    _ReleaseID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReleaseID");
                    OnReleaseIDChanged();
                }
            }
        }
        private global::System.Int32 _ReleaseID;
        partial void OnReleaseIDChanging(global::System.Int32 value);
        partial void OnReleaseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Release_Von_Programm
        {
            get
            {
                return _Release_Von_Programm;
            }
            set
            {
                OnRelease_Von_ProgrammChanging(value);
                ReportPropertyChanging("Release_Von_Programm");
                _Release_Von_Programm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Release_Von_Programm");
                OnRelease_Von_ProgrammChanged();
            }
        }
        private global::System.Int32 _Release_Von_Programm;
        partial void OnRelease_Von_ProgrammChanging(global::System.Int32 value);
        partial void OnRelease_Von_ProgrammChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Releasedatum
        {
            get
            {
                return _Releasedatum;
            }
            set
            {
                OnReleasedatumChanging(value);
                ReportPropertyChanging("Releasedatum");
                _Releasedatum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Releasedatum");
                OnReleasedatumChanged();
            }
        }
        private global::System.DateTime _Releasedatum;
        partial void OnReleasedatumChanging(global::System.DateTime value);
        partial void OnReleasedatumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Releasenummer
        {
            get
            {
                return _Releasenummer;
            }
            set
            {
                OnReleasenummerChanging(value);
                ReportPropertyChanging("Releasenummer");
                _Releasenummer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Releasenummer");
                OnReleasenummerChanged();
            }
        }
        private global::System.Int32 _Releasenummer;
        partial void OnReleasenummerChanging(global::System.Int32 value);
        partial void OnReleasenummerChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "FK__Build__ReleaseID__1FCDBCEB", "Build")]
        public Build Build
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Build>("HODOR_modell.FK__Build__ReleaseID__1FCDBCEB", "Build").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Build>("HODOR_modell.FK__Build__ReleaseID__1FCDBCEB", "Build").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Build> BuildReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Build>("HODOR_modell.FK__Build__ReleaseID__1FCDBCEB", "Build");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Build>("HODOR_modell.FK__Build__ReleaseID__1FCDBCEB", "Build", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "FK__Release__Release__1920BF5C", "Programm")]
        public Programm Programm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Programm>("HODOR_modell.FK__Release__Release__1920BF5C", "Programm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Programm>("HODOR_modell.FK__Release__Release__1920BF5C", "Programm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Programm> ProgrammReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Programm>("HODOR_modell.FK__Release__Release__1920BF5C", "Programm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Programm>("HODOR_modell.FK__Release__Release__1920BF5C", "Programm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "FK__Subreleas__Relea__1BFD2C07", "Subrelease")]
        public Subrelease Subrelease
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subrelease>("HODOR_modell.FK__Subreleas__Relea__1BFD2C07", "Subrelease").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subrelease>("HODOR_modell.FK__Subreleas__Relea__1BFD2C07", "Subrelease").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subrelease> SubreleaseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subrelease>("HODOR_modell.FK__Subreleas__Relea__1BFD2C07", "Subrelease");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subrelease>("HODOR_modell.FK__Subreleas__Relea__1BFD2C07", "Subrelease", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HODOR_modell", Name="Rolle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rolle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rolle object.
        /// </summary>
        /// <param name="rolleID">Initial value of the RolleID property.</param>
        /// <param name="rollenname">Initial value of the Rollenname property.</param>
        public static Rolle CreateRolle(global::System.Int32 rolleID, global::System.String rollenname)
        {
            Rolle rolle = new Rolle();
            rolle.RolleID = rolleID;
            rolle.Rollenname = rollenname;
            return rolle;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RolleID
        {
            get
            {
                return _RolleID;
            }
            set
            {
                if (_RolleID != value)
                {
                    OnRolleIDChanging(value);
                    ReportPropertyChanging("RolleID");
                    _RolleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RolleID");
                    OnRolleIDChanged();
                }
            }
        }
        private global::System.Int32 _RolleID;
        partial void OnRolleIDChanging(global::System.Int32 value);
        partial void OnRolleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Rollenname
        {
            get
            {
                return _Rollenname;
            }
            set
            {
                OnRollennameChanging(value);
                ReportPropertyChanging("Rollenname");
                _Rollenname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Rollenname");
                OnRollennameChanged();
            }
        }
        private global::System.String _Rollenname;
        partial void OnRollennameChanging(global::System.String value);
        partial void OnRollennameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "FK__Benutzer__RolleI__2B3F6F97", "Benutzer")]
        public EntityCollection<Benutzer> Benutzers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Benutzer>("HODOR_modell.FK__Benutzer__RolleI__2B3F6F97", "Benutzer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Benutzer>("HODOR_modell.FK__Benutzer__RolleI__2B3F6F97", "Benutzer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "Rolle_Zu_Rechte", "Rechte")]
        public EntityCollection<Rechte> Rechtes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rechte>("HODOR_modell.Rolle_Zu_Rechte", "Rechte");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rechte>("HODOR_modell.Rolle_Zu_Rechte", "Rechte", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HODOR_modell", Name="Subrelease")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subrelease : Release
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subrelease object.
        /// </summary>
        /// <param name="releaseID">Initial value of the ReleaseID property.</param>
        /// <param name="subrelease_Von_Release">Initial value of the Subrelease_Von_Release property.</param>
        public static Subrelease CreateSubrelease(global::System.Int32 releaseID, global::System.Int32 subrelease_Von_Release)
        {
            Subrelease subrelease = new Subrelease();
            subrelease.ReleaseID = releaseID;
            subrelease.Subrelease_Von_Release = subrelease_Von_Release;
            return subrelease;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReleaseID
        {
            get
            {
                return _ReleaseID;
            }
            set
            {
                if (_ReleaseID != value)
                {
                    OnReleaseIDChanging(value);
                    ReportPropertyChanging("ReleaseID");
                    _ReleaseID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReleaseID");
                    OnReleaseIDChanged();
                }
            }
        }
        private global::System.Int32 _ReleaseID;
        partial void OnReleaseIDChanging(global::System.Int32 value);
        partial void OnReleaseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Subrelease_Von_Release
        {
            get
            {
                return _Subrelease_Von_Release;
            }
            set
            {
                OnSubrelease_Von_ReleaseChanging(value);
                ReportPropertyChanging("Subrelease_Von_Release");
                _Subrelease_Von_Release = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Subrelease_Von_Release");
                OnSubrelease_Von_ReleaseChanged();
            }
        }
        private global::System.Int32 _Subrelease_Von_Release;
        partial void OnSubrelease_Von_ReleaseChanging(global::System.Int32 value);
        partial void OnSubrelease_Von_ReleaseChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "FK__Build__Build_von__20C1E124", "Build")]
        public EntityCollection<Build> Builds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Build>("HODOR_modell.FK__Build__Build_von__20C1E124", "Build");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Build>("HODOR_modell.FK__Build__Build_von__20C1E124", "Build", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "FK__Subreleas__Subre__1CF15040", "Programm")]
        public Programm Programm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Programm>("HODOR_modell.FK__Subreleas__Subre__1CF15040", "Programm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Programm>("HODOR_modell.FK__Subreleas__Subre__1CF15040", "Programm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Programm> ProgrammReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Programm>("HODOR_modell.FK__Subreleas__Subre__1CF15040", "Programm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Programm>("HODOR_modell.FK__Subreleas__Subre__1CF15040", "Programm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "FK__Subreleas__Relea__1BFD2C07", "Release")]
        public Release Release
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Release>("HODOR_modell.FK__Subreleas__Relea__1BFD2C07", "Release").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Release>("HODOR_modell.FK__Subreleas__Relea__1BFD2C07", "Release").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Release> ReleaseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Release>("HODOR_modell.FK__Subreleas__Relea__1BFD2C07", "Release");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Release>("HODOR_modell.FK__Subreleas__Relea__1BFD2C07", "Release", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HODOR_modell", "Modul_Zu_Subrelease", "Programm")]
        public EntityCollection<Programm> Programms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Programm>("HODOR_modell.Modul_Zu_Subrelease", "Programm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Programm>("HODOR_modell.Modul_Zu_Subrelease", "Programm", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
